dp의 개념이 작은 문제로 나눈다는걸 어렴풋이 알아서 재귀로 하려그랫는데 잘 안됏다
작은수는 저장해놓는다는것도 생각은햇는데 구현이 어려웟다 
dp1= 0
min함수로 작은수비교하는거 기억 

#include <iostream>
#include <vector> 
#include <stdio.h> 
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <algorithm>

using namespace std;

int dp[1000001];
int solution(int n)
{
    for(int i=2;i<=n;i++)
    {
        dp[i]=dp[i-1]+1;
        if(i%2==0)
            dp[i]= min(dp[i/2]+1,dp[i]);
        if(i%3==0)
            dp[i]= min(dp[i/3]+1,dp[i]);
        
    }
    
    return dp[n];
}

int main()
{
    int N;
    
    cin>>N;
    dp[1]=0;
    cout<<solution(N);
    return 0;
    
    
}



















오답 나름 생각해서 3은무조건나눠줘야생각하고그랫음.,.,그치만 아니엿음
#include <iostream>
#include <vector> 
#include <stdio.h> 
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <algorithm>

using namespace std;
int cnt;

int DP(int n)
{
    if(n==1)
    {
        cout<<cnt;
        return 0;
    }
    else if(n%3==0)
        {
            cnt++;
            return DP(n/3);
        }
        
    else if(n%3==1)
        {
            cnt++;
            return DP(n-1);
        }
    
    else if(n%3==2)
    {
        if(n%2==0)
            {
                cnt++;
                return DP(n/2);
            }
        else
            {
                cnt++;
                return DP(n-1);
            }
        
    }
    
    
    
}

int main()
{
    int N;
    
    cin>>N;
    
    cnt=0;
    DP(N);
    
    
    return 0;
    
    
}
